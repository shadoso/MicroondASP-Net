@model MicroondASP_Net.Models.MicrowaveCreate
@{
    var symbolsId = ViewBag.SymbolsIndex;
    var errorMessage = ViewBag.ErrorMessage;
    var creatingMicrowave = ViewBag.CreatingMicrowave;
}

@using (Html.BeginForm("Create", "MicrowaveCreate", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Deletable);
    @Html.HiddenFor(model => model.Updatable);

    <div class="form-horizontal">
        <h4>Criar novo modo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control reset-after-submit", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control reset-after-submit", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, "Tempo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Power, "Potência", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Warning, "Aviso!!!", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Warning, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Warning, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SymbolId, "Símbolo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SymbolId, new SelectList(symbolsId, "Value", "Text"), new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.SymbolId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customizable, "Customizável", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Customizable)
                    @Html.ValidationMessageFor(model => model.Customizable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
            <div class="col-md-10">
                <p class="text-danger">@Html.Raw(ViewBag.ErrorMessage)</p>
            </div>
            <div class="col-md-10">
                <p class="text">@Html.Raw(ViewBag.CreatingMicrowave)</p>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Resetar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}